@inject IJSRuntime _jsRuntime

<Modal @ref="@ConfirmDeleteModal" role="dialog" id="confirmDeleteModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <ModalHeader>
            <ModalTitle>Confirmação!!!</ModalTitle>
            <CloseButton Clicked="@(() => CloseGrupoModal("confirmDeleteModal"))" />
        </ModalHeader>
        <ModalBody>
            <p>Deseja de apagar esta entrada?</p>
            <p>Não será possível recupera-la!</p>
        </ModalBody>
        <ModalFooter>
            <Tooltip Text="Apagar">
                <Button Color="Color.Success" @onclick="OnClick">
                    <Icon Name="IconName.Save" /> Sim
                </Button>
            </Tooltip>
            <Tooltip Text="Fechar">
                <Button Color="Color.Warning" Clicked="@(() => CloseGrupoModal("confirmDeleteModal"))">
                    <Icon Name="IconName.StepBackward" /> Cancelar
                </Button>
            </Tooltip>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    private Modal ConfirmDeleteModal;

    private Dictionary<string, object> cdBtnConfig(string title, string ddismiss)
    {
        var btn = new Dictionary<string, object>()
    {
            { "title", title},
            { "data-dismiss", ddismiss}
        };

        return btn;
    }

    [Parameter]
    public Guid Id { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnClick { get; set; }

    private async Task CloseGrupoModal(string modalId)
    {
        await _jsRuntime.InvokeAsync<object>("global.closeModal", modalId);
    }
}
